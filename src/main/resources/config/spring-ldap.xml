<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:ldap="http://www.springframework.org/schema/ldap"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/ldap http://www.springframework.org/schema/ldap/spring-ldap-2.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<context:property-placeholder
		location="classpath:ldap-context-source-properties" />

	<ldap:context-source url="${ldap.url}"
		username="${ldap.username}" password="${ldap.password}"
		base="${ldap.base}" />

	<!-- This bean declaration will automatically register this bean to default 
		bean name and will also resolve context-source by assuming default bean name 
		for context-source. -->
	<!-- If we give different bean name for context-source, then we will have 
		to manually wire that bean by id here. -->
	<ldap:ldap-template />
	
	<!-- We need to declare this bean in order to use LdapBaseNameAware interface to work and inject base name of dit into spring beans. -->
	<!-- otherwisebase name will not get injected into beans implementing LdapBaseNameAware interface. -->
	<bean class="org.springframework.ldap.core.support.BaseLdapPathBeanPostProcessor" />

</beans>
